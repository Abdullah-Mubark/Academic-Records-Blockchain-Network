# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '3.2'

networks:
  byfn:
    driver: overlay
    attachable: true

services:
  ca-rm:
    image: hyperledger/fabric-ca:1.4.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-rm
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.rm.ryadhinspections.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/140c3f37aaf26c93ae90c76c609ee2c1d9d1b101163fa6fce665e4a1450873d4_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --cfg.identities.allowremove --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.rm.ryadhinspections.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/140c3f37aaf26c93ae90c76c609ee2c1d9d1b101163fa6fce665e4a1450873d4_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/rm.ryadhinspections.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg1
    networks:
      byfn:
        aliases:
          - ca.rm.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs01]
  ca-cd:
    image: hyperledger/fabric-ca:1.4.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-cd
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.cd.ryadhinspections.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/f52ae5bb3304514e091fe123dd4f17fc2897b3c55a1d9d14c70a0fe478647741_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --cfg.identities.allowremove --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.cd.ryadhinspections.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/f52ae5bb3304514e091fe123dd4f17fc2897b3c55a1d9d14c70a0fe478647741_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/cd.ryadhinspections.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg2
    networks:
      byfn:
        aliases:
          - ca.cd.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs05]

  ca-sfda:
    image: hyperledger/fabric-ca:1.4.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-sfda
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.sfda.ryadhinspections.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/e54087028f68fafc9280eeb198f9ed8ccea020f3b910c071f1097104a12db6b0_sk
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start --cfg.identities.allowremove --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.sfda.ryadhinspections.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/e54087028f68fafc9280eeb198f9ed8ccea020f3b910c071f1097104a12db6b0_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/sfda.ryadhinspections.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg3
    networks:
      byfn:
        aliases:
          - ca.sfda.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs08]

  ca-reg1:
    image: hyperledger/fabric-ca:1.4.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-reg1
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.reg1.ryadhinspections.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/b6cab03602789c88e1adadf2f167130b47a70eda47cac4555f6e7ec03de38621_sk
    ports:
      - "10054:7054"
    command: sh -c 'fabric-ca-server start --cfg.identities.allowremove --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.reg1.ryadhinspections.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/b6cab03602789c88e1adadf2f167130b47a70eda47cac4555f6e7ec03de38621_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/reg1.ryadhinspections.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg4
    networks:
      byfn:
        aliases:
          - ca.reg1.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs11]

  zookeeper0:
    hostname: zookeeper0.ryadhinspections.com
    image: hyperledger/fabric-zookeeper
    ports:
      - 2181
      - 2888
      - 3888
    container_name: zookeeper0
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      byfn:
        aliases:
          - zookeeper0.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints: [node.hostname == bcsrvs17]

  zookeeper1:
    hostname: zookeeper1.ryadhinspections.com
    image: hyperledger/fabric-zookeeper
    ports:
      - 2181
      - 2888
      - 3888
    container_name: zookeeper1
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      byfn:
        aliases:
          - zookeeper1.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints: [node.hostname == bcsrvs17]

  zookeeper2:
    hostname: zookeeper2.ryadhinspections.com
    image: hyperledger/fabric-zookeeper
    ports:
      - 2181
      - 2888
      - 3888
    container_name: zookeeper2
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      byfn:
        aliases:
          - zookeeper2.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints: [node.hostname == bcsrvs17]

  kafka0:
    hostname: kafka0.ryadhinspections.com
    image: hyperledger/fabric-kafka
    ports:
      - 9092
    container_name: kafka0
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_MIN_INSYNC_REPLICAS=1
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      byfn:
        aliases:
          - kafka0.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints: [node.hostname == bcsrvs16]

  kafka1:
    hostname: kafka1.ryadhinspections.com
    image: hyperledger/fabric-kafka
    ports:
      - 9092
    container_name: kafka1
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_MIN_INSYNC_REPLICAS=1
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      byfn:
        aliases:
          - kafka1.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints: [node.hostname == bcsrvs16]

  kafka2:
    hostname: kafka2.ryadhinspections.com
    image: hyperledger/fabric-kafka
    ports:
      - 9092
    container_name: kafka2
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_MIN_INSYNC_REPLICAS=1
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      byfn:
        aliases:
          - kafka2.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints: [node.hostname == bcsrvs16]

  orderer-ryadhinspections-com:
    image: hyperledger/fabric-orderer:1.4.0
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    container_name: orderer.ryadhinspections.com
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_HOST=orderer.ryadhinspections.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0.ryadhinspections.com:9092,kafka1.ryadhinspections.com:9092,kafka2.ryadhinspections.com:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
      - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    depends_on:
      - kafka0
      - kafka1
      - kafka2
    ports:
      - 7050:7050
    volumes:
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/ryadhinspections.com/orderers/orderer.ryadhinspections.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/ryadhinspections.com/orderers/orderer.ryadhinspections.com/tls/:/var/hyperledger/orderer/tls
      #- orderer.ryadhinspections.com:/var/hyperledger/production/orderer
    networks:
      byfn:
        aliases:
          - orderer.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs15]

  orderer1-ryadhinspections-com:
    image: hyperledger/fabric-orderer:1.4.0
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    container_name: orderer1.ryadhinspections.com
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_HOST=orderer1.ryadhinspections.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0.ryadhinspections.com:9092,kafka1.ryadhinspections.com:9092,kafka2.ryadhinspections.com:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer1/orderer.genesis.block
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
      - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer1/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer1/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer1/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer1/tls/ca.crt]
    depends_on:
      - kafka0
      - kafka1
      - kafka2
    ports:
      - 8050:7050
    volumes:
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer1/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/ryadhinspections.com/orderers/orderer1.ryadhinspections.com/msp:/var/hyperledger/orderer1/msp
      - ./crypto-config/ordererOrganizations/ryadhinspections.com/orderers/orderer1.ryadhinspections.com/tls/:/var/hyperledger/orderer1/tls
      #- orderer1.ryadhinspections.com:/var/hyperledger/production/orderer1
    networks:
      byfn:
        aliases:
          - orderer1.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs15]

  orderer2-ryadhinspections-com:
    image: hyperledger/fabric-orderer:1.4.0
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    container_name: orderer2.ryadhinspections.com
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_HOST=orderer.ryadhinspections.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0.ryadhinspections.com:9092,kafka1.ryadhinspections.com:9092,kafka2.ryadhinspections.com:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer2/orderer.genesis.block
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
      - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer2/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer2/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer2/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer2/tls/ca.crt]
    networks:
      byfn:
        aliases:
          - orderer2.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs15]
    depends_on:
      - kafka0
      - kafka1
      - kafka2
    ports:
      - 9050:7050
    volumes:
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer2/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/ryadhinspections.com/orderers/orderer2.ryadhinspections.com/msp:/var/hyperledger/orderer2/msp
      - ./crypto-config/ordererOrganizations/ryadhinspections.com/orderers/orderer2.ryadhinspections.com/tls/:/var/hyperledger/orderer2/tls
      #- orderer2.ryadhinspections.com:/var/hyperledger/production/orderer2

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER="rmcouchdbadmin"
      - COUCHDB_PASSWORD="ZaRNaiM9C478"
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      byfn:
        aliases:
          - couchdb0.rm.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs01]

  peer0-rm-ryadhinspections-com:
    container_name: peer0.rm.ryadhinspections.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byfn_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.rm.ryadhinspections.com
      - CORE_PEER_ADDRESS=peer0.rm.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.rm.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.rm.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=RMMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.rm.ryadhinspections.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME="rmcouchdbadmin"
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD="ZaRNaiM9C478"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'sleep 60; peer node start'
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/rm.ryadhinspections.com/peers/peer0.rm.ryadhinspections.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/rm.ryadhinspections.com/peers/peer0.rm.ryadhinspections.com/tls:/etc/hyperledger/fabric/tls
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        #- peer0.rm.ryadhinspections.com:/var/hyperledger/production
    ports:
      - 7051:7051
      - 7053:7053
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
      - couchdb0
    networks:
      byfn:
        aliases:
          - peer0.rm.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs01]

  peer1-rm-ryadhinspections-com:
    container_name: peer1.rm.ryadhinspections.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byfn_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.rm.ryadhinspections.com
      - CORE_PEER_ADDRESS=peer1.rm.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.rm.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.rm.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=RMMSP
      #- CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      #- CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.rm.ryadhinspections.com:5984
      #- CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME="rmcouchdbadmin"
      #- CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD="ZaRNaiM9C478"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'sleep 60; peer node start'
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/rm.ryadhinspections.com/peers/peer1.rm.ryadhinspections.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/rm.ryadhinspections.com/peers/peer1.rm.ryadhinspections.com/tls:/etc/hyperledger/fabric/tls
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        #- peer0.rm.ryadhinspections.com:/var/hyperledger/production
    ports:
      - 8051:7051
      - 8053:7053
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
      #- couchdb0
    networks:
      byfn:
        aliases:
          - peer1.rm.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs01]


  peer0-cd-ryadhinspections-com:
    container_name: peer0.cd.ryadhinspections.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byfn_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.cd.ryadhinspections.com
      - CORE_PEER_ADDRESS=peer0.cd.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.cd.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.cd.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=CDMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'sleep 60; peer node start'
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/cd.ryadhinspections.com/peers/peer0.cd.ryadhinspections.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/cd.ryadhinspections.com/peers/peer0.cd.ryadhinspections.com/tls:/etc/hyperledger/fabric/tls
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        #- peer0.cd.ryadhinspections.com:/var/hyperledger/production
    ports:
      - 9051:7051
      - 9053:7053
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
    networks:
      byfn:
        aliases:
          - peer0.cd.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs05]

  peer1-cd-ryadhinspections-com:
    container_name: peer1.cd.ryadhinspections.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byfn_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.cd.ryadhinspections.com
      - CORE_PEER_ADDRESS=peer1.cd.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.cd.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.cd.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=CDMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'sleep 60; peer node start'
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/cd.ryadhinspections.com/peers/peer1.cd.ryadhinspections.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/cd.ryadhinspections.com/peers/peer1.cd.ryadhinspections.com/tls:/etc/hyperledger/fabric/tls
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        #- peer1.cd.ryadhinspections.com:/var/hyperledger/production
    ports:
      - 10051:7051
      - 10053:7053
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
    networks:
      byfn:
        aliases:
          - peer1.cd.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs05]

  peer0-sfda-ryadhinspections-com:
    container_name: peer0.sfda.ryadhinspections.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byfn_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.sfda.ryadhinspections.com
      - CORE_PEER_ADDRESS=peer0.sfda.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.sfda.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.sfda.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=SFDAMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'sleep 60; peer node start'
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/sfda.ryadhinspections.com/peers/peer0.sfda.ryadhinspections.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/sfda.ryadhinspections.com/peers/peer0.sfda.ryadhinspections.com/tls:/etc/hyperledger/fabric/tls
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        #- peer0.sfda.ryadhinspections.com:/var/hyperledger/production
    ports:
      - 11051:7051
      - 11053:7053
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
    networks:
      byfn:
        aliases:
          - peer0.sfda.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs08]

  peer1-sfda-ryadhinspections-com:
    container_name: peer1.sfda.ryadhinspections.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byfn_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.sfda.ryadhinspections.com
      - CORE_PEER_ADDRESS=peer1.sfda.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.sfda.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.sfda.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=SFDAMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'sleep 60; peer node start'
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/sfda.ryadhinspections.com/peers/peer1.sfda.ryadhinspections.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/sfda.ryadhinspections.com/peers/peer1.sfda.ryadhinspections.com/tls:/etc/hyperledger/fabric/tls
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        #- peer1.sfda.ryadhinspections.com:/var/hyperledger/production
    ports:
      - 12051:7051
      - 12053:7053
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
    networks:
      byfn:
        aliases:
          - peer1.sfda.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs08]

  peer0-reg1-ryadhinspections-com:
    container_name: peer0.reg1.ryadhinspections.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byfn_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.reg1.ryadhinspections.com
      - CORE_PEER_ADDRESS=peer0.reg1.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.reg1.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.reg1.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=REG1MSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'sleep 60; peer node start'
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/reg1.ryadhinspections.com/peers/peer0.reg1.ryadhinspections.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/reg1.ryadhinspections.com/peers/peer0.reg1.ryadhinspections.com/tls:/etc/hyperledger/fabric/tls
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        #- peer0.reg1.ryadhinspections.com:/var/hyperledger/production
    ports:
      - 13051:7051
      - 13053:7053
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
    networks:
      byfn:
        aliases:
          - peer0.reg1.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs11]

  peer1-reg1-ryadhinspections-com:
    container_name: peer1.reg1.ryadhinspections.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byfn_byfn
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.reg1.ryadhinspections.com
      - CORE_PEER_ADDRESS=peer1.reg1.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.reg1.ryadhinspections.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.reg1.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=REG1MSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'sleep 60; peer node start'
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/reg1.ryadhinspections.com/peers/peer1.reg1.ryadhinspections.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/reg1.ryadhinspections.com/peers/peer1.reg1.ryadhinspections.com/tls:/etc/hyperledger/fabric/tls
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        #- peer1.reg1.ryadhinspections.com:/var/hyperledger/production
    ports:
      - 14051:7051
      - 14053:7053
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
    networks:
      byfn:
        aliases:
          - peer1.reg1.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.hostname == bcsrvs11]

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:1.4.0
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.rm.ryadhinspections.com:7051
      - CORE_PEER_LOCALMSPID=RMMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/rm.ryadhinspections.com/peers/peer0.rm.ryadhinspections.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/rm.ryadhinspections.com/peers/peer0.rm.ryadhinspections.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/rm.ryadhinspections.com/peers/peer0.rm.ryadhinspections.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/rm.ryadhinspections.com/users/Admin@rm.ryadhinspections.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    networks:
      byfn:
        aliases:
          - cli.ryadhinspections.com
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 1
      placement:
        constraints: [node.role == manager]
    depends_on:
      - orderer-ryadhinspections-com
      - orderer1-ryadhinspections-com
      - orderer2-ryadhinspections-com
      - peer0-rm-ryadhinspections-com
      - peer0-cd-ryadhinspections-com
      - peer0-sfda-ryadhinspections-com
      - peer0-reg1-ryadhinspections-com
      - peer1.rm.ryadhinspections.com
      - peer1.cd.ryadhinspections.com
      - peer1.sfda.ryadhinspections.com
      - peer1.reg1.ryadhinspections.com
